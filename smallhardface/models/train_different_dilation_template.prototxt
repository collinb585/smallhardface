name: "face"
layer {
  name: 'input-data'
  type: 'Python'
  top: 'data'
  top: 'im_info'
  top: 'gt_boxes'
  top: 'im_idx'
  python_param {
    module: 'roi_data_layer.layer'
    layer: 'RoIDataLayer'
    param_str: "'num_classes': 2"
  }
}

layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
#==========UNIFIED HEAD======
layer {
  name: "conv5_256"
  type: "Convolution"
  bottom: "conv5_3"
  top: "conv5_256"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "conv5_256_relu"
  type: "ReLU"
  bottom: "conv5_256"
  top: "conv5_256"
}

layer {
  name: "conv5_256_up"
  type: "Deconvolution"
  bottom: "conv5_256"
  top: "conv5_256_up"
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 256
    group: 256
    pad: 1
    weight_filler: { type: "bilinear" }
    bias_term: false
  }
  param { lr_mult: 0 decay_mult: 0 }
}



layer {
  name: "conv4_256"
  type: "Convolution"
  bottom: "conv4_3"
  top: "conv4_256"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "conv4_256_relu"
  type: "ReLU"
  bottom: "conv4_256"
  top: "conv4_256"
}

# Concat features
layer {
  name: "conv4_fuse"
  type: "Concat"
  bottom: "conv5_256_up"
  bottom: "conv4_256"
  top: "conv4_fuse"
  concat_param {
    axis: 1
  }
}

# Perform final 3x3 convolution
layer {
  name: "conv4_fuse_final"
  type: "Convolution"
  bottom: "conv4_fuse"
  top: "conv4_fuse_final"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "conv4_fuse_final_relu"
  type: "ReLU"
  bottom: "conv4_fuse_final"
  top: "conv4_fuse_final"
}

layer {
  name: "head_1"
  type: "Convolution"
  bottom: "conv4_fuse_final"
  top: "head_1"
  param { name: "head_w" lr_mult: 1.0 decay_mult: 1.0 }
  param { name: "head_b" lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    dilation: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "head_1_relu"
  type: "ReLU"
  bottom: "head_1"
  top: "head_1"
}

layer {
  name: "head_2"
  type: "Convolution"
  bottom: "conv4_fuse_final"
  top: "head_2"
  param { name: "head_w" lr_mult: 1.0 decay_mult: 1.0 }
  param { name: "head_b" lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 2
    stride: 1
    dilation: 2
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "head_2_relu"
  type: "ReLU"
  bottom: "head_2"
  top: "head_2"
}

layer {
  name: "head_4"
  type: "Convolution"
  bottom: "conv4_fuse_final"
  top: "head_4"
  param { name: "head_w" lr_mult: 1.0 decay_mult: 1.0 }
  param { name: "head_b" lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 4
    stride: 1
    dilation: 4
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "head_4_relu"
  type: "ReLU"
  bottom: "head_4"
  top: "head_4"
}


layer {
  name: "cls_score_1"
  type: "Convolution"
  bottom: "head_1"
  top: "cls_score_1_output"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 2
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "bbox_pred_1"
  type: "Convolution"
  bottom: "head_1"
  top: "bbox_pred_1_output"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 4
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "cls_score_2"
  type: "Convolution"
  bottom: "head_2"
  top: "cls_score_2_output"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 2
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "bbox_pred_2"
  type: "Convolution"
  bottom: "head_2"
  top: "bbox_pred_2_output"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 4
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}


layer {
  name: "cls_score_4"
  type: "Convolution"
  bottom: "head_4"
  top: "cls_score_4_output"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 2
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "bbox_pred_4"
  type: "Convolution"
  bottom: "head_4"
  top: "bbox_pred_4_output"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 4
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "cls_score_output_concat"
  bottom: "cls_score_1_output"
  bottom: "cls_score_2_output"
  bottom: "cls_score_4_output"
  top: "cls_score_output"
  type: "Concat"
  concat_param {
    axis: 2
  }
}

layer {
   bottom: "cls_score_output"
   top: "cls_score_reshape_output"
   name: "cls_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 6 dim: -1 dim: 0 } }
}


layer {
  name: "bbox_pred_output_concat"
  bottom: "bbox_pred_1_output"
  bottom: "bbox_pred_2_output"
  bottom: "bbox_pred_4_output"
  top: "bbox_pred_output"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer {
  name: 'target_layer'
  type: 'Python'
  bottom: 'cls_score_reshape_output'
  bottom: 'gt_boxes'
  bottom: 'im_info'
  bottom: 'data'
  bottom: 'im_idx'
  top: 'anchor_labels'
  top: 'reg_tragets'
  top: 'reg_inside_weights'
  top: 'reg_outside_weights'
  python_param {
    module: 'lib.layers.multi_layer_anchor_layer'
    layer: 'MultiLayerAnchorLayer'
    param_str: "{'source': [0,0,0],'feat_stride': [8,8,8],'scales': [1,2,4], 'ratios':[1,], 'ohem': True, 'allowed_border': [0,0,0]}"
  }
}

layer {
  name: "cls_loss"
  type: "SoftmaxWithLoss"
  bottom: "cls_score_output"
  bottom: "anchor_labels"
  propagate_down: 1
  propagate_down: 0
  top: "cls_loss"
  loss_weight: 1
  loss_param {
    ignore_label: -1
    normalize: true
  }
}

layer {
  name: "reg_loss"
  type: "SmoothL1Loss"
  bottom: "bbox_pred_output"
  bottom: "reg_tragets"
  bottom: 'reg_inside_weights'
  bottom: 'reg_outside_weights'
  top: "reg_loss"
  loss_weight: 1
  smooth_l1_loss_param { sigma: 3.0 }
}
